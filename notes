
* hgmod позволяет создавать простую структуру репозиториев - то есть все подрепозитории в одной папке и все другие репы, которые нуждаются в какой-нибудь зависимой репе будут просто получать ссылка на нее, а не тянуть одну и ту же репу н-ое количество раз.

* Rake — инструмент для автоматизации сборки программного кода, написаный на Ruby

* Аббревиатура CHMOD обозначает право доступа, представляющее собой набор символов, сообщающие серверу - кто и какие действия может совершать с соответствующим каталогом или файлом
https://ru.hostings.info/termins/chmod.html

* Phabricator — мощная платформа для разработчиков программного обеспечения с набором удобных взаимоинтегрированых веб-инструментов, ускоряющих и облегчающих процесс совместной разработки. Он включает в себя приложения для проверки кода, размещения репозиториев, отслеживания и исправления ошибок, управления проектами и многое другое.
_______________________________________________________________________________________

логи сервера при запуске из IDEA: /home/user/project/klone/server/.tmp/game.log

Пример ивента от клиента
/sendo {"type":"item", "action":"move", "objId":"-1300", "x":"22", "y":"120", "rotate":"0"}
где action - действие над объектом
	objId  - id того объекта, который двигаем
	x,y    - координаты куда двигаем

_______________________________________________________________________________________

удаление объекта из локации происходит в kloneLocation.delGameObject

_______________________________________________________________________________________


как пересобрать клиент/сервер -> https://confluence.vizor-games.com/pages/viewpage.action?pageId=47189648

Сборка сервера
$ cd /home/user_name/project/klone/server
$ rake ide

Сборка клиента
$ cd /home/user/project/klone/client
$ rake deploy

Note: в дальнейшей работе, если были изменены только файлы кода клиента (а не ресурсы), его сборку можно производить командой

$ rake deploy_compile
______________________________________________________________________________________


cleanLocation 	=>	http://localhost/klonedm/x-admin?method=smartCleanLocation&to=14531632&locations=sanderra_location&skipLockMissions=true
getState 		=> 	http://localhost/klonedm/x-admin?method=getState&uid=14531632

______________________________________________________________________________________

У объекта на локации есть локация, у локации есть gameState, у gameState есть gameSession
______________________________________________________________________________________

rake mbuild:task_tree[ide] - с помощью этой команды можно увидеть какие таски ваполняются в rake. Т.е. аналог комманд в мавене. Если в мавене пишем mvn install, то до install выполнться ряд команд таких как validate, compile, test, package и verify.
______________________________________________________________________________________

Делать diff для ревью
в консоли arc diff и хеш последнего комита
в открывшемся окне можно написать какое-то сообщение
после этого ctrl+O чтоб записать(сохранить), enter и ctrl+X для выхода
______________________________________________________________________________________
Если надо сделать апдейт в ветку, которая находится на ревью, то 

1)так выглядит команда, когда в ветку, находящейся на ревью был смержен девелоп

arc diff develop --update D3361,

где 
develop - название ветки с которой делался diff,
--update - команда для arc,
D3361 - название коммита в фабрикаторе, к которому добавятся новые изменения

2) так выглядит команда, когда в ветку не мержилась другая ветка, а поверх старого комита, получился новый
для второй ветки
arc diff 123asd456zxc789 --update D3361,

где
123asd456zxc789 - хэш последнего комита в ветке, поверх которого уже есть новый
--update - команда для arc,
D3361 - название коммита в фабрикаторе, к которому добавятся новые изменения




Сохранение gameStateInfo происходит в CqlCassandraInfoDao.saveInfo, 
который вызывается из GameStateInfoDao.saveInfo 
который вызывается из SimpleSessionProvider.flushSessionInfo

______________________________________________________________________________________

перед мержем своей ветки в девелоп:
вливаю себе девелоп
закрываю ветку
комит/пуш
мержу в девелоп только что закрытую ветку
комит/пуш
______________________________________________________________________________________


про locationArea

у нас в игре всего 4 локации, в которых есть эти эрии:
домашка, основная карта путешествий, портовая домашка, морская карта путешествий
на этих локациях для игрока есть недоступные зоны: на домашке мы не можем взаимодействовать с зоной за мостом, пока не построим сам мост, а далее не можем взаимодействовать с зелёной зоной справа, пока не разберём завал
каждую такую locationArea можно открыть через какой-либо триггер при апгрейде (как происходит в мосту на домашке), либо через айтем areaMap, который при добавлении в стейт открывает указанную зону (так работает с картой путешествий)
порядковые значения этих зон каким-то образом обрабатываются на сервере и клиенте
например 
0 - непроходная
1 - центральная
2 - дорога
3 - южная
6 - вода
9 - порт стартовая
и тд
и именно эти значения указаны в интах внутри cells
то есть для первой домашней зоны у нас есть 1-зелёная (доступная для взаимодействия), есть 2-дорога (для размещения транспорта, на неё ничего не поставишь, есть 6-синяя (вода, на неё можно поставить объект, если у того есть атрибут asignArea="water", и именно для этого есть отдельная locationArea id="water")
B_BRIDGE - мост, который открывает путь ко второй зоне, у него есть в апгрейде  effect="second"

______________________________________________________________________________________

particle - это объекты, которые вырубаются на локе и собираются в кучки для переноса в сани

______________________________________________________________________________________

pickAll

тип таски pickAll был заведен, чтобы объединить в себе pick и pickPickup

pick - собрать урожай с грядок/продукцию с фабрик/коров/овец. Т.е. когда какой угодно объект произвел нам указанный айтем, и мы должны собрать его с этого объекта;

pickPickup - получить айтем из пикап-группы. Объект, который выдает этот айтем, может быть чем угодно: пикапбоксом, вырубаемым объектом, фруктом, это может быть наградная пикап-группа за строительство чего-нибудь. Главное - указанный в таске айтем нам выпадает из пикап-группы;

______________________________________________________________________________________

обновление версии social-server

1) переключиться на нужный коммит social-server
2) Открыть репо клона
3) Посмотреть что в Локал ченджес есть социал
4) В терминале в корневой папке проекта
5) hg commit -m "social-server version up"
6) push

______________________________________________________________________________________

клонирование проекта
$ cd /home/user_name/project
$ hg clone https://tools.vizor-interactive.com/scm/hg/klone

______________________________________________________________________________________

lombock

Go to: File | Settings | Build, Execution, Deployment | Compiler | "Shared build process VM options
и добавить флаг
-Djps.track.ap.dependencies=false

______________________________________________________________________________________


@ModelGenIdentify
Если указана эта аннотация над классом, то для клиента будет сгенерирован метод

public boolean isQuestGiverItem() 
{
   return true;
}


@ModelIgnore
Если указана эта аннотация над полем, 
то считается, что при генерации классов для клиента он это поле не получит. Таким образом, только сервер будет знать про этом поле и работать с ним. Есть некоторые фичи, где клиенту не нужно знать про поле, например, рандомный выбор подарка. За рандом отвечает только сервер, клиент в итоге получает только результат.

______________________________________________________________________________________


http://localhost/atlantis/x-admin?method=cleanLocation&location=main&to=1-BCF1

_____________________________________________________________________________________


@Test
public void test() throws JsonProcessingException
{
    ObjectMapper objectMapper = new ObjectMapper()
                                    .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)
                                    .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)
                                    .setSerializationInclusion(JsonInclude.Include.NON_NULL);
    
}

_____________________________________________________________________________________


генерация ключей
ssh-keygen -t rsa

_____________________________________________________________________________________


Насчет регрессии:
Просто описываешь затронутые части, что могло поломаться и что добавил, рекомендации для тестирования, старайся описывать понятно для QA.

_____________________________________________________________________________________

На клиенте ивент добавляется список на отправку серверу в GameSession.event(GameEvent event, GameEventHandler customHandler)

работа с энергие происходит в EnergyState

ивенты создаются и добавляются в список на отправку серверу в ServerEventManager

_____________________________________________________________________________________


Что такое gem?


Технически файл с расширением .gem представляет собой обычный архив, внутри которого находится файл спецификации и исходный код библиотеки в состоянии на момент релиза.

Релизом обычно считают момент присвоения библиотеке нового номера версии (version bump) с одновременной сборкой и публикацией gem'а.

В спецификации содержится достаточно много информации, но самое главное:

    название и версия данного gem'а;
    названия и версии gem'ов, без которых работа будет невозможна (зависимости);
    данные об авторе и описание gem'а.


_____________________________________________________________________________________

Смотреть логи сервера

/var/log/atlantis

Можно и через деплоер по кнопке Log

_____________________________________________________________________________________


логи webtools

/var/log/webtools

tail -f /var/log/webtools/webtools.log

Найти айпи билд машин можно в проекте вебтулз в конфиг файле атлантиса

_____________________________________________________________________________________

Обновление системы

sudo lvcreate -L10G -s -n snap /dev/vg0/root
для создания
lvscan
в состоянии должен быть active
после этого можно обновляться  sudo pacman -Syu
удаляем  lvremove /dev/vmstore/snap
восстановить lvconvert --merge /dev/vg0/snap


_____________________________________________________________________________________

Получить стейт игрока из дебага или релиза

Сюда заходи
https://updater.vizor-games.com/webtools/#modules/logs/atlantis/atlantis/mobile
И применить

Тебе выдаст всех игроков у кого в логах такое отбилось
Копируешь id и гетаешь себе уже тут

https://xconsole.vizor-games.com/xconsole/atlantis/xadmin?server=atlantis-release&method=getState


_____________________________________________________________________________________

Чтобы TortoiseHG не запрашивал постоянно ваши логин и пароль при затягивании последних коммитов, надо:
  1) перейти в .../atlantis/.hg/
  2) открыть файл .hgrc для редактирования
  3) в строке, где прописан путь вашего репозитория, вписать ваш логин и пароль следующим образом:
[paths]
default = https://ВАШ.ЛОГИН:ПАРОЛЬ@tools.vizor-interactive.com/scm/hg/atlantis


_____________________________________________________________________________________

Дебаг сервер

ssh 94.130.210.104
_____________________________________________________________________________________


Скопировать файл по ssh на локальный комп

scp artyom.lisaev@94.130.210.104:/home/deployer/atlantis-debug/atlantis/atlantis-mobile-server/src_items_test/com/social/game/atlantis/serialization/ItemSerializer.java  /home/artyom.lisaev/vizor/


_____________________________________________________________________________________

Валидация айтемов при deploy-cluster
bin/mbuild //atlantis-mobile-server:validate_all_items_on_deploy -p debug-cluster


_____________________________________________________________________________________


Пароль и логин от релизной xconsole
artyom.lisaev
Dks584Kjkj5

_____________________________________________________________________________________

Найти подстроку в файле

grep -rnw '/path/to/somewhere/' -e 'pattern'

    -r or -R is recursive,
    -n is line number, and
    -w stands for match the whole word.
    -l (lower-case L) can be added to just give the file name of matching files.
    -e is the pattern used during the search

Along with these, --exclude, --include, --exclude-dir flags could be used for efficient searching:

    This will only search through those files which have .c or .h extensions:

grep --include=\*.{c,h} -rnw '/path/to/somewhere/' -e "pattern"

    This will exclude searching all the files ending with .o extension:

grep --exclude=\*.o -rnw '/path/to/somewhere/' -e "pattern"

    For directories it's possible to exclude one or more directories using the --exclude-dir parameter. For example, this will exclude the dirs dir1/, dir2/ and all of them matching *.dst/:

grep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/somewhere/' -e "pattern"

This works very well for me, to achieve almost the same purpose like yours.

For more options check man grep.

Оставить только debug и error подстроки в логе
grep -i -e 'debug' -e 'error' Not_enought > without_trace

_____________________________________________________________________________________

Чтобы на дебаг сервере что-то запустить/остановить, типа webtools или redis
надо использовать команду

sudo /etc/init.d/webtools (redis) start

sudo /etc/init.d/webtools (redis) stop

_____________________________________________________________________________________

Перегенерировать публичный ключ, имея приватный

ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub

Привытный должен лежать в папке .ssh

_____________________________________________________________________________________

Извлечь файл из jar

jar xvf .jar имя файла для извлечения

извлекаться будет в ту папку из которой была запущена команда
поэтому лучше создать спец папку, перейти в нее и из нее уже запускать эту команду, а иначе можно засрать какой-то каталог

_____________________________________________________________________________________

grep

https://www.thegeekstuff.com/2009/03/15-practical-unix-grep-command-examples/

_____________________________________________________________________________________

смотреть версию сошиал сервера
обновляешься на ревизию, где хочешь посмотреть хэш social-server’а, потом 
cd mobile-framework && git submodule status


GIT

Посмотреть в какой ветке сделан коммит
git branch -a --contains 1add79c4a62d0a37265e9870cc511d6c1b1a82d2

_____________________________________________________________________________________

Ошибка вида 
 BUILDING library jboss-modules-1.8.10
12:51:25.249   * Fetching
12:51:25.252   * Unpacking
12:51:25.295   * Patching
12:51:25.300   JOB FAILED
12:51:25.300   BUILD FAILED
12:51:25.300   rake aborted!
12:51:25.300   error: patch --binary -Np1 -i /home/vagrant/.rvm/gems/ruby-3.0.0/gems/mbuild2-mlib-overlay-1.13.7/data/mlib/repo/java/jboss/java11.patch
решается просто
удаление github-jboss-modules-jboss-modules-1.8.10.Final.zip из /mbuild-cache/.mbuild2/dist и из /mbuild-cache/.mbuild2/tmp/build 

_____________________________________________________________________________________

Указать новые даты через xpath
Например для holidayBuilding transformationDate
items_xpath_patch:
"//holidayBuilding[@id='HOLIDAY_BUILDING_TEMP_07_REM_ECLIPSE']/transformationDate" : "2019-01-09T00:01:00"
или для rule
"//rule[@id="rule_per_26_temple_next_location"]/allMatcher/dateMatcher/@date" : "2019-01-09T00:01:00"

_____________________________________________________________________________________
Если команда 
git submodule update --init --recursive не помогает, то можно попробовать 
git submodule update --init --force --remote
git submodule update --init --force --remote mobile-framework


_____________________________________________________________________________________

Выполнить bin/mbuild //:ide на винде надо так
bundle exec mbuild //:ide

_____________________________________________________________________________________

Поиск процесса занимающего порт
netstat -tulpn | grep :1536
Где 1536 - порт
Ответ типа: tcp6       0      0 :::1536                 :::*                    LISTEN      7354/java 
Где 7354 - Pid процесса.

_____________________________________________________________________________________


Накатить схему cassandra заново:
открываешь терминал и выполняешь cqlsh.
выполняешь DROP KEYSPACE atlantis;
в atlantis/atlantis-mobile-server/common/ находится db_schema.cql. 
выполняешь команду SOURCE 'твой_путь_к_db_schema/db_schema.cql';


_____________________________________________________________________________________

Если не запускается виртуалка на этапе start webtools.service

нужно проверить файл gitConfig
должен лежать где-то здесь C:\Users\username
там должно быть что-то записано в параметре autocrlf
[core]
	autocrlf = false
если там true, то нужно поменять на false
снести полностью виртуалку
снести репозиторий
выкачать репозиторий по-новой
поднять виртуалку по-новой

_____________________________________________________________________________________


Посмотреть историю коммитов одной ветки
git log --graph, --first-parent, and --no-merges

_____________________________________________________________________________________


Почитать сообщения об ошибках в линуксе
sudo dmesg
